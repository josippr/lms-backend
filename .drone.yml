kind: pipeline
type: docker
name: default

steps:
  - name: build-image
    image: docker:dind
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - docker build -t lms-backend .

  - name: debug-secrets
    image: alpine
    environment:
      SSH_USERNAME:
        from_secret: ssh_username
      SSH_PASSWORD:
        from_secret: ssh_password
      VM_IP:
        from_secret: vm_ip
    commands:
      - echo "USERNAME=$SSH_USERNAME"
      - echo "VM_IP=$VM_IP"
      - echo "PW_LENGTH=${#SSH_PASSWORD}"


  - name: deploy
    image: alpine:latest
    environment:
      SSH_USERNAME:
        from_secret: ssh_username
      SSH_PASSWORD:
        from_secret: ssh_password
      VM_IP:
        from_secret: vm_ip
    commands:
      - apk add --no-cache openssh sshpass
      - echo "user=$SSH_USERNAME, ip=$VM_IP, pw length=${#SSH_PASSWORD}"
      - >
        sshpass -p "${SSH_PASSWORD}" ssh -o StrictHostKeyChecking=no -p 22 "${SSH_USERNAME}@${VM_IP}" << 'EOF'
        cd /mnt/data/deployments/lms-backend
        git pull origin master
        docker-compose down
        docker-compose build
        docker-compose up -d
        docker system prune -f
        EOF


volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock