kind: pipeline
type: docker
name: default

environment:
  NODE_ENV: production
  COMPOSE_PROJECT_NAME: lms-backend

steps:
  - name: build-image
    image: docker:dind
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - docker build -t lms-backend .

  - name: deploy
    image: alpine:latest
    environment:
      SSH_HOST:
        from_secret: SSH_HOST
      SSH_USER:
        from_secret: SSH_USER
      SSH_KEY:
        from_secret: SSH_KEY
    commands:
      - apk add --no-cache openssh-client
      - mkdir -p ~/.ssh
      - echo "$SSH_KEY"
      - echo "$SSH_USER"
      - echo "$SSH_HOST"
      - echo "$SSH_KEY" > ~/.ssh/id_rsa_lms
      - chmod 600 ~/.ssh/id_rsa_lms
      - |
        ssh -o StrictHostKeyChecking=no \
            -i ~/.ssh/id_rsa_lms \
            ${SSH_USER}@${SSH_HOST} \
            "cd /mnt/data/deployments/lms-backend && \
            git pull origin master && \
            docker-compose down && \
            docker-compose build && \
            docker-compose up -d"
volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock